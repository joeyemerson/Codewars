# Task

# You are given an array of integers that you want distribute between several groups. The first group should contain numbers from 1 to 104, the second should contain those from 104 + 1 to 2 x 104, ..., the 100th one should contain numbers from 99 x 104 + 1 to 106 and so on.

# All the numbers will then be written down in groups to the text file in such a way that:

# the groups go one after another;
# each non-empty group has a header which occupies one line;
# each number in a group occupies one line.

# Calculate how many lines the resulting text file will have.
# Example

# For a = [20000, 239, 10001, 999999, 10000, 20566, 29999],

# the output should be 11.

# The numbers can be divided into 4 groups:

# 239 and 10000 go to the 1st group (1 ... 104);

# 10001 and 20000 go to the second 2nd (104 + 1 ... 2 x 104);

# 20566 and 29999 go to the 3rd group (2 x 104 + 1 ... 3 x 104);

# groups from 4 to 99 are empty;

# 999999 goes to the 100th group (99 * 104 + 1 ... 106).

# Thus, there will be 4 groups (i.e. four headers) and 7 numbers,

# so the file will occupy 4 + 7 = 11 lines.

# The file like this:

# 1-10000:
# 239
# 10000
# 10001-20000:
# 10001
# 20000
# 20001-30000:
# 20566
# 29999
# 990001-1000000:
# 999999

# Input/Output

#     [input] integer array a

#     Constraints: 1 ≤ a.length ≤ 104, 1 ≤ a[i] ≤ 106.

#     [output] an integer

# The number of lines needed to store the grouped numbers.


def numbers_grouping(a):
    return len(set((n-1) // (10000) for n in a)) + len(a)


print('11', numbers_grouping([20000, 239, 10001, 999999, 10000, 20566, 29999]))
print('23', numbers_grouping([10000, 20000, 30000, 40000, 50000, 60000, 10000, 120000, 150000, 200000, 300000, 1000000]))
print('2', numbers_grouping([10000]))
print('3', numbers_grouping([10000, 1]))
print('164', numbers_grouping([193475, 217639, 742335, 894563, 418580, 877011, 336748, 46631, 702838, 789461, 724871, 149598, 761929, 879528, 750544, 767366, 128196, 138486, 450921, 889043, 251691, 400806, 588776, 73875, 198792, 356820, 857450, 662441, 730038, 487165, 4717, 639497, 657647, 282854, 766405, 16865, 649657, 948856, 324136, 410049, 577427, 679575, 213599, 825657, 922175, 979504, 839606, 819661, 278063, 46142, 875219, 519082, 445293, 397525, 449568, 218861, 873483, 626960, 27908, 722245, 243837, 818947, 863084, 797451, 986362, 705837, 222682, 87432, 875735, 37604, 182524, 930375, 28178, 844890, 115688, 202069, 585378, 332107, 763048, 369642, 489291, 215623, 380013, 856470, 368926, 482847, 941066, 483112, 136522, 889614, 653269, 269946, 889847, 482467, 373221, 107821, 654069, 959752]))
print('126', numbers_grouping([190875, 471826, 148194, 551770, 596213, 791680, 385154, 372728, 563318, 703767, 821790, 95798, 538251, 650943, 266027, 815043, 431048, 64080, 900019, 437931, 274952, 944829, 869487, 152139, 665222, 495072, 841722, 154464, 925514, 789670, 931587, 597719, 733543, 792564, 909982, 532580, 296456, 163712, 464061, 206185, 580502, 845205, 882371, 600712, 737908, 68916, 548473, 943580, 689045, 537434, 131072, 266366, 717815, 845241, 466755, 843316, 374193, 522709, 90428, 335175, 802299, 128756, 116694, 809081, 518460, 974722, 286209, 241842, 242094, 767216, 136482, 655241, 841416, 340274]))
print('146', numbers_grouping([242956, 879586, 428432, 551276, 589059, 647245, 777846, 703143, 456566, 373562, 825578, 566059, 407303, 400580, 448129, 932665, 447635, 550594, 20393, 960070, 307338, 168534, 947085, 167398, 560571, 625175, 870632, 962337, 675660, 149497, 657036, 577150, 177346, 685423, 325485, 510235, 19942, 227963, 138323, 501208, 174651, 655579, 737628, 955424, 479694, 60019, 322332, 27247, 286648, 833538, 250895, 994973, 980578, 803983, 601261, 580303, 640636, 57962, 369403, 254097, 187470, 972524, 988401, 513528, 978313, 555354, 636304, 823506, 878454, 867154, 610767, 646368, 216311, 594839, 381286, 925203, 398877, 810070, 605512, 575602, 122240, 367905, 149303, 233785, 358551, 656325]))